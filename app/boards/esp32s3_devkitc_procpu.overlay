// ESP32-S3 Reference Manual:
// https://www.espressif.com/sites/default/files/documentation/esp32-s3_technical_reference_manual_en.pdf

/ {
    aliases {
		fs0 = &fs0;
		gpioc = &gpioc;
        adc0 = &adc0;
		adc1 = &adc1;
	};

	chosen {
		zephyr,console = &usb_serial;
	};

    fstab {
        compatible = "zephyr,fstab";
        fs0: fs0 {
            compatible = "zephyr,fstab,littlefs";
            read-size = <16>;
			prog-size = <16>;
			cache-size = <64>;
			lookahead-size = <32>;
            block-cycles = <512>;
            partition = <&fs0_partition>;
            mount-point = "/fs0";
            automount;
        };
    };

    ap_wifi: ap_wifi {
        compatible = "espressif,esp32-wifi";
        status = "okay";
    };

	gpioc: gpioc {
		compatible = "gpio-keys";

		di_0: di_0 {
			gpios = < &gpio0 9 GPIO_PULL_UP >;
		};

		di_1: di_1 {
			gpios = < &gpio0 10 GPIO_PULL_UP >;
		};

		di_2: di_2 {
			gpios = < &gpio0 11 GPIO_PULL_UP >;
		};

		di_3: di_3 {
			gpios = < &gpio0 12 GPIO_PULL_UP >;
		};

		di_4: di_4 {
			gpios = < &gpio0 13 GPIO_PULL_UP >;
		};

		di_5: di_5 {
			gpios = < &gpio0 14 GPIO_PULL_UP >;
		};
	};
};

&flash0 {
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        fs0_partition: partition@700000 {
            label = "fs0_storage";
            reg = <0x700000 DT_SIZE_M(1)>; // 1MB at offset 7MB
        };
    };
};

&psram0 {
	size = <DT_SIZE_M(2)>;
};

&twai {
    compatible = "espressif,esp32-twai";
    pinctrl-0 = <&twai0_pins>;
    status = "okay";
};

&pinctrl {
    twai0_pins: twai0_pins {
        group {
            pinmux = <TWAI_TX_GPIO5>,
                     <TWAI_RX_GPIO6>;
        };
    };
};

// ADC gain set to ADC_GAIN_1_4 corresponds to 12dB attenuation with measurement range of 0-3.1V
// according to Espressif documention:
// https://docs.espressif.com/projects/esp-idf/en/v4.4/esp32s3/api-reference/peripherals/adc.html
&adc0 {
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;

	channel@2 {
		reg = <2>;
		zephyr,gain = "ADC_GAIN_1_4";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};

    channel@3 {
		reg = <3>;
		zephyr,gain = "ADC_GAIN_1_4";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};

    channel@4 {
		reg = <4>;
		zephyr,gain = "ADC_GAIN_1_4";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};

    channel@5 {
		reg = <5>;
		zephyr,gain = "ADC_GAIN_1_4";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};
};

&adc1 {
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;

	channel@3 {
		reg = <3>;
		zephyr,gain = "ADC_GAIN_1_4";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};

    channel@4 {
		reg = <4>;
		zephyr,gain = "ADC_GAIN_1_4";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};

    channel@5 {
		reg = <5>;
		zephyr,gain = "ADC_GAIN_1_4";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};

    channel@6 {
		reg = <6>;
		zephyr,gain = "ADC_GAIN_1_4";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};
};

&usb_serial {
	status = "okay";
};
